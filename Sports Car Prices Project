{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5144479,"sourceType":"datasetVersion","datasetId":2988825}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-06T22:29:21.165074Z","iopub.execute_input":"2024-07-06T22:29:21.166137Z","iopub.status.idle":"2024-07-06T22:29:21.176887Z","shell.execute_reply.started":"2024-07-06T22:29:21.166078Z","shell.execute_reply":"2024-07-06T22:29:21.175164Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"/kaggle/input/sports-car-prices-dataset/Sport car price.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:29:21.179528Z","iopub.execute_input":"2024-07-06T22:29:21.180332Z","iopub.status.idle":"2024-07-06T22:29:21.191170Z","shell.execute_reply.started":"2024-07-06T22:29:21.180273Z","shell.execute_reply":"2024-07-06T22:29:21.189635Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('../input/sports-car-prices-dataset/Sport car price.csv')\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:30:09.636278Z","iopub.execute_input":"2024-07-06T22:30:09.636749Z","iopub.status.idle":"2024-07-06T22:30:09.659378Z","shell.execute_reply.started":"2024-07-06T22:30:09.636714Z","shell.execute_reply":"2024-07-06T22:30:09.658167Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"      Car Make Car Model  Year Engine Size (L) Horsepower Torque (lb-ft)  \\\n0      Porsche       911  2022               3        379            331   \n1  Lamborghini   Huracan  2021             5.2        630            443   \n2      Ferrari   488 GTB  2022             3.9        661            561   \n3         Audi        R8  2022             5.2        562            406   \n4      McLaren      720S  2021               4        710            568   \n\n  0-60 MPH Time (seconds) Price (in USD)  \n0                       4        101,200  \n1                     2.8        274,390  \n2                       3        333,750  \n3                     3.2        142,700  \n4                     2.7        298,000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Car Make</th>\n      <th>Car Model</th>\n      <th>Year</th>\n      <th>Engine Size (L)</th>\n      <th>Horsepower</th>\n      <th>Torque (lb-ft)</th>\n      <th>0-60 MPH Time (seconds)</th>\n      <th>Price (in USD)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Porsche</td>\n      <td>911</td>\n      <td>2022</td>\n      <td>3</td>\n      <td>379</td>\n      <td>331</td>\n      <td>4</td>\n      <td>101,200</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Lamborghini</td>\n      <td>Huracan</td>\n      <td>2021</td>\n      <td>5.2</td>\n      <td>630</td>\n      <td>443</td>\n      <td>2.8</td>\n      <td>274,390</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Ferrari</td>\n      <td>488 GTB</td>\n      <td>2022</td>\n      <td>3.9</td>\n      <td>661</td>\n      <td>561</td>\n      <td>3</td>\n      <td>333,750</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Audi</td>\n      <td>R8</td>\n      <td>2022</td>\n      <td>5.2</td>\n      <td>562</td>\n      <td>406</td>\n      <td>3.2</td>\n      <td>142,700</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>McLaren</td>\n      <td>720S</td>\n      <td>2021</td>\n      <td>4</td>\n      <td>710</td>\n      <td>568</td>\n      <td>2.7</td>\n      <td>298,000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:30:11.912605Z","iopub.execute_input":"2024-07-06T22:30:11.913004Z","iopub.status.idle":"2024-07-06T22:30:11.922380Z","shell.execute_reply.started":"2024-07-06T22:30:11.912973Z","shell.execute_reply":"2024-07-06T22:30:11.920771Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"(1007, 8)"},"metadata":{}}]},{"cell_type":"code","source":"print(df)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:32:56.419317Z","iopub.execute_input":"2024-07-06T22:32:56.419765Z","iopub.status.idle":"2024-07-06T22:32:56.437696Z","shell.execute_reply.started":"2024-07-06T22:32:56.419730Z","shell.execute_reply":"2024-07-06T22:32:56.436177Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"         Car Make Car Model  Year Engine Size (L) Horsepower Torque (lb-ft)  \\\n0         Porsche       911  2022               3        379            331   \n1     Lamborghini   Huracan  2021             5.2        630            443   \n2         Ferrari   488 GTB  2022             3.9        661            561   \n3            Audi        R8  2022             5.2        562            406   \n4         McLaren      720S  2021               4        710            568   \n...           ...       ...   ...             ...        ...            ...   \n1002   Koenigsegg     Jesko  2022               5       1280           1106   \n1003        Lotus     Evija  2021  Electric Motor       1972           1254   \n1004      McLaren     Senna  2021               4        789            590   \n1005       Pagani    Huayra  2021               6        764            738   \n1006        Rimac    Nevera  2021  Electric Motor       1888           1696   \n\n     0-60 MPH Time (seconds) Price (in USD)  \n0                          4        101,200  \n1                        2.8        274,390  \n2                          3        333,750  \n3                        3.2        142,700  \n4                        2.7        298,000  \n...                      ...            ...  \n1002                     2.5      3,000,000  \n1003                       2      2,000,000  \n1004                     2.7      1,000,000  \n1005                       3      2,600,000  \n1006                    1.85      2,400,000  \n\n[1007 rows x 8 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"df.describe(include = 'all')","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:33:55.170863Z","iopub.execute_input":"2024-07-06T22:33:55.171310Z","iopub.status.idle":"2024-07-06T22:33:55.218419Z","shell.execute_reply.started":"2024-07-06T22:33:55.171276Z","shell.execute_reply":"2024-07-06T22:33:55.216875Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"       Car Make Car Model         Year Engine Size (L) Horsepower  \\\ncount      1007      1007  1007.000000             997       1007   \nunique       38       176          NaN              45        124   \ntop     Porsche        GT          NaN               4        503   \nfreq         88        55          NaN             219         45   \nmean        NaN       NaN  2021.201589             NaN        NaN   \nstd         NaN       NaN     2.019802             NaN        NaN   \nmin         NaN       NaN  1965.000000             NaN        NaN   \n25%         NaN       NaN  2021.000000             NaN        NaN   \n50%         NaN       NaN  2021.000000             NaN        NaN   \n75%         NaN       NaN  2022.000000             NaN        NaN   \nmax         NaN       NaN  2023.000000             NaN        NaN   \n\n       Torque (lb-ft) 0-60 MPH Time (seconds) Price (in USD)  \ncount            1004                    1007           1007  \nunique             93                      43            367  \ntop               590                     3.5        500,000  \nfreq               71                     153             34  \nmean              NaN                     NaN            NaN  \nstd               NaN                     NaN            NaN  \nmin               NaN                     NaN            NaN  \n25%               NaN                     NaN            NaN  \n50%               NaN                     NaN            NaN  \n75%               NaN                     NaN            NaN  \nmax               NaN                     NaN            NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Car Make</th>\n      <th>Car Model</th>\n      <th>Year</th>\n      <th>Engine Size (L)</th>\n      <th>Horsepower</th>\n      <th>Torque (lb-ft)</th>\n      <th>0-60 MPH Time (seconds)</th>\n      <th>Price (in USD)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1007</td>\n      <td>1007</td>\n      <td>1007.000000</td>\n      <td>997</td>\n      <td>1007</td>\n      <td>1004</td>\n      <td>1007</td>\n      <td>1007</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>38</td>\n      <td>176</td>\n      <td>NaN</td>\n      <td>45</td>\n      <td>124</td>\n      <td>93</td>\n      <td>43</td>\n      <td>367</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>Porsche</td>\n      <td>GT</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>503</td>\n      <td>590</td>\n      <td>3.5</td>\n      <td>500,000</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>88</td>\n      <td>55</td>\n      <td>NaN</td>\n      <td>219</td>\n      <td>45</td>\n      <td>71</td>\n      <td>153</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2021.201589</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.019802</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1965.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2021.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2021.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2023.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['Price (in USD)'].describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:38:54.893447Z","iopub.execute_input":"2024-07-06T22:38:54.894355Z","iopub.status.idle":"2024-07-06T22:38:54.906859Z","shell.execute_reply.started":"2024-07-06T22:38:54.894312Z","shell.execute_reply":"2024-07-06T22:38:54.905196Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"count        1007\nunique        367\ntop       500,000\nfreq           34\nName: Price (in USD), dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:39:37.271840Z","iopub.execute_input":"2024-07-06T22:39:37.272498Z","iopub.status.idle":"2024-07-06T22:39:37.297706Z","shell.execute_reply.started":"2024-07-06T22:39:37.272438Z","shell.execute_reply":"2024-07-06T22:39:37.296637Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1007 entries, 0 to 1006\nData columns (total 8 columns):\n #   Column                   Non-Null Count  Dtype \n---  ------                   --------------  ----- \n 0   Car Make                 1007 non-null   object\n 1   Car Model                1007 non-null   object\n 2   Year                     1007 non-null   int64 \n 3   Engine Size (L)          997 non-null    object\n 4   Horsepower               1007 non-null   object\n 5   Torque (lb-ft)           1004 non-null   object\n 6   0-60 MPH Time (seconds)  1007 non-null   object\n 7   Price (in USD)           1007 non-null   object\ndtypes: int64(1), object(7)\nmemory usage: 63.1+ KB\n","output_type":"stream"}]}]}